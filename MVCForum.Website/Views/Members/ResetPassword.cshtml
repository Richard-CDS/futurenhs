@model MvcForum.Web.ViewModels.Registration.ResetPasswordViewModel

@{
    Layout = "~/Views/Shared/_LayoutFullWidth.cshtml";
    ViewBag.Title = Html.LanguageString("Members.ChangePassword.Title");
	string inputError = "c-input--error";
	string formError = "c-form-group--error";
}

<div class="c-grid-block">
    <div class="c-grid-block_item l-col-12 l-col-6-t">
	    @if (!ViewData.ModelState.IsValid)
	    {
		    <div aria-labelledby="error-summary-title" class="c-error-summary u-margin-bottom-spacing-5" role="alert" tabindex="-1">
			    <h2 id="error-summary-title" class="c-error-summary_title">
				    There is a problem
			    </h2>
			    <div class="c-error-summary_body">
				    <ul class="c-error-summary_list">

					    @Html.Raw(Html.CustomValidationSummary("c-error-summary_error-text"))

				    </ul>
			    </div>
		    </div>
	    }
        @using (Html.BeginForm("ResetPassword", "Members", new { id = Model.Id, token = Model.Token }, FormMethod.Post, new { @class = "form-resetpassword" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(m => m.Token)
            @Html.HiddenFor(m => m.Id)

		<fieldset>
			<h1>@ViewBag.Title</h1>

			<p>
				@string.Format(Html.LanguageString("Members.ChangePassword.Text"), Membership.MinRequiredPasswordLength)
			</p>

			<div class="c-form-group @Html.FieldHasError(model => model.NewPassword, formError)">
				@Html.LabelFor(x => x.NewPassword, "New Password", htmlAttributes: new { @class = "c-label" })
				@Html.ValidationMessageFor(x => x.NewPassword, "", new { @class = "c-error-message" })
				@Html.EditorFor(x => x.NewPassword, new { htmlAttributes = new { @class = "c-input" + " " + Html.FieldHasError(model => model.NewPassword, inputError) } })
			</div>

			<div class="c-form-group @Html.FieldHasError(model => model.ConfirmPassword, formError)">
				@Html.LabelFor(x => x.ConfirmPassword, "Confirm New Password", htmlAttributes: new { @class = "c-label" })
				@Html.ValidationMessageFor(x => x.ConfirmPassword, "", new { @class = "c-error-message" })
				@Html.PasswordFor(x => x.ConfirmPassword, new { @class = "c-input" + " " + Html.FieldHasError(model => model.ConfirmPassword, inputError) })
			</div>


			<div class="submit-holder">
				<button type="submit" class="c-button c-button--min-width">@Html.LanguageString("Buttons.ChangePassword")</button>
			</div>
		</fieldset>

        }
    </div>
</div>